import "./globals.css";
import { Montserrat } from "next/font/google";
import localFont from "next/font/local";
import { NextIntlClientProvider } from "next-intl";
import { ThemeProvider } from "@/app/context/ThemeContext";
const montserrat = Montserrat({
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700", "800", "900"],
  fallback: ["sans-serif"],
});
const montserratArabic = localFont({
  src: [
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic Light 300.otf",
      weight: "300",
    },
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic Regular 400.otf",
      weight: "400",
    },
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic Bold 700.otf",
      weight: "700",
    },
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic Medium 500.otf",
      weight: "500",
    },
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic SemiBold 600.otf",
      weight: "600",
    },
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic ExtraBold 800.otf",
      weight: "800",
    },
    {
      path: "./../../public/Montserrat_Arabic/Montserrat-Arabic Black 900.otf",
      weight: "900",
    },
  ],
});
export const metadata = {
  title: "Plixa",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return [{ locale: "en" }, { locale: "ar" }];
}

export default async function RootLayout({ children, params: { locale } }) {
  let messages;
  try {
    messages = (await import(`../../messages/${locale}.json`)).default;

  } catch (error) {
    notFound();
  }
  return (
    <html lang={locale}>
      <body
        className={
          locale == "en" ? montserrat.className : montserratArabic.className
        }
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
            <ThemeProvider>{children}</ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
